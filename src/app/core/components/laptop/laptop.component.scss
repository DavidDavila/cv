$laptop-width: 90vmin;
$laptop-height: calc($laptop-width * 0.6);
$trackpad-width: calc($laptop-width / 3.5);
$gray: rgb(186 187 193);
$screen: rgb(13 31 45);
$border-radius: 5px;

/* Resto de tu cÃ³digo CSS */

@keyframes show {
  0% {
    --rotate-initial-x: -30deg;
    --rotate-initial-y: -5deg;
    scale: 100%;
    transform: translate(0, 0);
  }
  1% {
    --rotate-initial-x: -30deg;
    --rotate-initial-y: 40deg;
    animation-change: true;
  }
  20% {
    scale: 150%;
    transform: translate(-22vmin, 3vmin);
  }
  28% {
    --rotate-initial-x: -26deg;
    --rotate-initial-y: 0deg;
    scale: 150%;
    transform: translate(-22vmin, 3vmin);
  }
  50% {
    scale: 50%;
    transform: translate(4vmin, 2vmin);
  }
  100% {
    scale: 100%;
    transform: translate(0px, 0px);
  }
}
@keyframes appearScreen {
  2% {
    opacity: 0;
  }
  23% {
    opacity: 0.75;
  }
  30% {
    opacity: 0;
  }
}
@keyframes rotate-notifications {
  0% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(360deg);
  }
}
@keyframes animate-background {
  0% {
    filter: drop-shadow(4vmin 4vmin 80px var(--bg-200))
      drop-shadow(8vmin 8vmin 80px var(--bg-300))
      drop-shadow(12vmin 12vmin 40px var(--primary-100));
  }
  50% {
    filter: drop-shadow(0 5vmin 80px var(--bg-200))
      drop-shadow(5vmin 5vmin 80px var(--bg-300))
      drop-shadow(-12vmin 5vmin 40px var(--primary-100));
  }
  100% {
    filter: drop-shadow(-2vmin -2vmin 80px var(--bg-200))
      drop-shadow(-5vmin -5vmin 80px var(--bg-300))
      drop-shadow(-12vmin -12vmin 40px var(--primary-100));
  }
}
#laptop {
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  view-timeline-axis: block;
  animation-timeline: --main-scroll;
  animation-name: show;
  animation-range: entry 100% cover 100%;
  animation-fill-mode: both;
  will-change: transform;
  transition: 1s;
  > article {
    transform: translateY(15vh);
    animation: animate-background 7s infinite alternate;
    #laptop__element,
    .cube,
    .cube__face {
      width: $laptop-width;
      height: $laptop-height;
    }

    input {
      &[type="checkbox"] {
        display: none;
      }
      &#laptop-toggle:checked + #laptop__element .cube__face--back {
        transform-origin: 50% 100%;
        transform: rotateY(180deg) rotateX(90deg) translateY($laptop-height / 2);
        z-index: 10;
      }
    }

    #laptop__element {
      display: block;
      perspective: 800px;
      position: relative;
      top: 50%;
      left: 50%;
      transform: translate3d(-50%, -50%, 0);
    }

    .cube {
      position: relative;
      transform-style: preserve-3d;
      will-change: transform;
      transform: translateZ(-$laptop-width/2) rotateX(var(--rotate-x))
        rotateY(var(--rotate-y));
      transition: 0.2s;
    }

    .cube__face {
      position: absolute;
      transform-style: preserve-3d;
    }

    .cube__face--back {
      transform: rotateY(180deg) translateZ($laptop-height / 2);
      border-top-left-radius: $border-radius;
      border-top-right-radius: $border-radius;
      transition: 0.3s;
      outline-color: transparent;
      &:hover,
      &:focus {
        outline-color: black;
      }
      &:hover {
        cursor: pointer;
      }
      > div {
        background-image: linear-gradient(
          125deg,
          rgba(white, 0.5),
          transparent
        );
        background-color: $gray;
        height: 100%;
        width: 100%;
        position: absolute;
        top: 0;
        left: 0;
        @for $i from 2 to 15 {
          &:nth-child(#{$i + 1}) {
            transform: translateZ(#{$i/2}px);
            background-color: mix($gray, rgba(black, 0.3), 50%);
          }
        }
        &:last-child {
          background-color: $gray;
          background-image: url("/cv/assets/img/stickers.png");
          background-repeat: no-repeat;
          background-size: contain;
          background-position: center;
        }
        #screen {
          $shine: rgba(white, 0.1);
          position: absolute;
          width: calc($laptop-width - 4px);
          transform: translateX(2px) translateY(2px);
          height: calc($laptop-height - 4px);
          background-color: $screen;
          background-image: linear-gradient(
            0deg,
            rgba(255, 255, 255, 0) 0%,
            rgba(255, 255, 255, 0.2) 100%
          );
          z-index: 1;

          &::after {
            view-timeline-axis: block;
            animation-timeline: --main-scroll;
            animation-name: appearScreen;
            animation-range: entry 100% cover 100%;
            animation-fill-mode: both;
            background-image: url("/cv/assets/img/linkedin.png");
            background-size: cover;
            background-position: center;
            content: "";
            position: absolute;
            inset: 0;
            opacity: 0;
          }
        }
      }
    }
    .cube__face--bottom {
      border-bottom-left-radius: $border-radius;
      border-bottom-right-radius: $border-radius;
      background-color: $gray;
      transform: rotateX(-90deg) translateZ($laptop-height / 2);
      > div {
        background-color: $gray;
        height: 100%;
        width: 100%;
        position: absolute;
        top: 0;
        left: 0;
        @for $i from 2 to 15 {
          &:nth-child(#{$i + 1}) {
            transform: translateZ(-#{$i/2}px);
            background-color: mix($gray, rgba(black, 0.3), 50%);
          }
        }
        &:last-child {
          overflow: hidden;
          background-color: $gray;
        }
      }
    }

    #keyboard,
    #trackpad {
      // background-color: $red;

      position: absolute;
    }

    #keyboard {
      $padding-keyboard: 1vmin;
      width: calc($laptop-width - $padding-keyboard * 2);
      height: calc($laptop-height - $trackpad-width);
      bottom: 0;
      left: 0;
      display: grid;
      transform: rotatex(180deg);
      padding: $padding-keyboard;
      grid-template-columns: repeat(17, 1fr);
      grid-template-rows: repeat(4, 1fr);
      grid-gap: calc($padding-keyboard / 2);
      .key {
        border-radius: $border-radius;
        position: relative;
        &:nth-last-child(7) {
          grid-column: span 5;
        }
        &:after {
          background-color: $screen;
          content: "";
          display: block;
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
        }
        div {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: $gray;
          &:last-child {
            box-shadow: 2px 1px 1px 2px rgba(black, 0.05);
          }
        }
      }
    }

    #trackpad {
      box-shadow: inset 0 0 4px 0px rgba($screen, 0.5);
      top: 6%;
      left: 50%;
      transform: translateX(-50%);
      height: calc($trackpad-width * 0.6);
      width: $trackpad-width;
      border-radius: $border-radius;
    }
  }
}
